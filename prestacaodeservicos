pragma solidity 0.5.12;
   
    contract PrestacaoDeServicos
{
    string public prestador;
    string public empresa;
    uint256 public  valorHora;
    uint256 public horasTrabalhadas;

    constructor (
        string memory nomePrestador,
        string memory nomeEmpresa,
        uint256 valorHoraTrabalho,
        uint256 numeroHorasTrabalhadas) public
        
        {
// require para que o contrato seja limitado a no m´áximo 66.000 ether
        
        require (valorHoraTrabalho<=300, "O VALOR DA HORA ULTRAPASSOU O LIMITE");
        require (numeroHorasTrabalhadas<=220, "O NÚMERO DE HORAS ULTRAPASSOU O LIMITE");
        
        prestador = nomePrestador;
        empresa = nomeEmpresa;
        valorHora = valorHoraTrabalho;
        horasTrabalhadas = numeroHorasTrabalhadas;
        }
    
    function remuneracaoFinal () public view returns (uint256 remuneracaoFinal)
    {
        remuneracaoFinal = valorHora*horasTrabalhadas;
        
/*condiç~ão para a ter uma remuneraç~ão m´ínima de 1.000 ether
            *Gostaria que aparecesse a mensagem que foi aplicada essa condiç~ão
*/
        
        if (remuneracaoFinal<1000)
        {    
            remuneracaoFinal = 1000;
        }
    }
    
    function duracaoDoContrato (uint256 duracaoDoContrato) public
    {
        for (uint i=1; duracaoDoContrato<12; i++) {
            duracaoDoContrato<12;
        }
    }    
}
